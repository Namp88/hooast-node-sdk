import { CryptoUtils } from '../src/utils/crypto.utils';
import * as fs from 'fs';

console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞\n');

const wallet = CryptoUtils.generateKeyPair();

console.log('‚úÖ –ö–æ—à–µ–ª–µ–∫ —Å–æ–∑–¥–∞–Ω:');
console.log(`Address: ${wallet.address}`);
console.log(`Private Key: ${wallet.privateKey.toString('hex')}\n`);

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª .env
const envContent = `TEST_WALLET_ADDRESS=${wallet.address}
TEST_WALLET_PRIVATE_KEY=${wallet.privateKey.toString('hex')}
`;

fs.writeFileSync('.env.test', envContent);

console.log('‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ .env.test');
console.log('\nüìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
console.log('1. –û—Ç–ø—Ä–∞–≤—å –Ω–µ–º–Ω–æ–≥–æ HTN –Ω–∞ –∞–¥—Ä–µ—Å:');
console.log(`   ${wallet.address}`);
console.log('2. –î–æ–∂–¥–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
console.log('3. –ó–∞–ø—É—Å—Ç–∏: npm run test:real-tx\n');
